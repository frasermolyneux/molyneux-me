name: Release to Production

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 4" # Every Thursday at 3am

permissions:
  id-token: write # This is required for Az CLI Login
  contents: read # This is required for actions/checkout

concurrency: # This is required to prevent multiple runs of the same workflow from running at the same time.
  group: ${{ github.workflow }}

jobs:
  terraform-plan-and-apply-dev:
    environment: Development
    runs-on: ubuntu-latest

    concurrency: # This is required to prevent multiple GitHub Actions invocations against stateful resources. e.g. Terraform state file / Database / Deployed Apps
      group: ${{ github.repository }}-dev

    steps:
    - uses: actions/checkout@v4

    - uses: frasermolyneux/actions/terraform-plan-and-apply@main
      with:
        terraform-folder: "terraform"
        terraform-var-file: "tfvars/dev.tfvars"
        terraform-backend-file: "backends/dev.backend.hcl"
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - id: terraform-output
      shell: bash
      run: |
        cd terraform
        echo "static_web_app_name=$(terraform output -raw static_web_app_name)" >> $GITHUB_OUTPUT
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    outputs:
      static_web_app_name: ${{ steps.terraform-output.outputs.static_web_app_name }}

  static-web-app-deploy-dev:
    environment: Development
    runs-on: ubuntu-latest
    needs: [terraform-plan-and-apply-dev]

    concurrency: # This is required to prevent multiple GitHub Actions invocations against stateful resources. e.g. Terraform state file / Database / Deployed Apps
      group: ${{ github.repository }}-dev

    steps:
    - uses: actions/checkout@v4

    - name: "Az CLI Login"
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}

    - id: static-web-app-api-key
      uses: azure/CLI@v1
      with:
        inlineScript: |
            static_web_app_api_key=$(az staticwebapp secrets list -n ${{ needs.terraform-plan-and-apply-dev.outputs.static_web_app_name }} -o tsv --query properties.apiKey)
            echo "::add-mask::$static_web_app_api_key"
            echo static_web_app_api_key=$static_web_app_api_key >> $GITHUB_ENV   

    - id: deploy-static-web-app
      uses: Azure/static-web-apps-deploy@v1
      with:
          azure_static_web_apps_api_token: ${{ env.static_web_app_api_key }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/src" # App source code path
          output_location: "_site" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
      env:
          JEKYLL_ENV: production